{"componentChunkName":"component---src-pages-posts-dato-cms-project-slug-js","path":"/posts/parallel/","result":{"data":{"datoCmsProject":{"title":"Parallel","text":"## A Note About This Project\nThis project never actually got finished. It would have taken more time, energy, and attention than I had available while I was working on it. It was a pretty cool proof of concept though.\n\nUnfortuantely, I am unable to point you to a Github repo for this one, since it ended up needing to be made private. \n\n## What It Was\nParallel was a prototype language-learning web application, targeted at students learning a language for school. For example, those who had recently moved to the United States from a non-English speaking country, who needed to learn English for their studies. \n\nIt used children's stories, articles, or news stories that one might already be familiar with or be interested in to teach people whatever language they needed to learn. It would then as questions about the story to get a sense of how well the user understood it, and adjust the difficulty of the rest of the stories they were presented with accordingly.\n\nIt was developed as a community-centered project while I was a student of the [MIT Leadership Training Institute](https://lti.mit.edu/) (LTI). \n\nThe site I used to demonstrate the site to the class is still live. If you want to take a look, you can find it [here](https://sad-villani-a6b106.netlify.app/). It should still be fully-functional.\n\n## The Process of Building It\nThe LTI put an emphasis on planning and setting deadlines for our community outreach projects, so this project ended up being one of the most fully-planned ones I've done yet. \n\nThis ended up being a good thing, since it was so large and complicated that it would have been easy to fall down a rabbit-hole and focus on one small part or feature that should have been moved on from for a long time. \n\nI started out by building out a simple frontend and connecting a similarly simple backend. My goal in this stage was to figure out and learn to use the technologies I wanted to use for this project.\n\nI was already familiar with much of the frontend components, however this was the first time I had ever done user-authentication or used a database in a project. \n\nAfter I had all the basic parts working together (e.g. the database, authentication, the server and frontend) I planned out what the actual site should look like. \n\nI planned out what pages I wanted it to have, how the user-experience should flow, and what components I needed to build.\n\nAfter that planning was finished, I fully connected the authentication framework and made it so users could create and log into accounts. This would enable them to store progress and work on progressively harder stories.\n\nI then built out the database structure for the stories themselves and the questions that it would ask to gauge how well the user understood. I also put a few examples in.\n\nFinally, I built the full frontend, ensuring that users could log in reliably, and access the example stories I had put in.\n\nThis is about as far as it got. I had done some research into what it would take to make this into a fully-functioning application, however the money that it would have taken to run it would have meant creating a company, and that was not something I had time to do (since High School ate up most of my time). \n\n## Technologies I Used\n\nThis project was built largely using [ReactJS](https://reactjs.org/). It was the framework that I built the frontend with and it also made it so I had access to packages that made it easier to connect to the authentication system and database. Within that I used [React Router](https://reactrouter.com/) to handle pages and the Firebase and Auth0 packages to connect to their respective services.\n\nFor the database, I used [Firebase](https://firebase.google.com/), which is a Google service. It has a tree-like structure and stores things in JSON format, which was something I was already familiar with at the time. \n\nFor the authenication I used [Auth0](https://auth0.com/), one of the larger authenication services out there. \n\n## What I Learned From This Project\n\nThis was one of the first big projects I worked on, and I learned a lot from it.\n\nManaging complexity is one of the biggest obsticles to overcome in many projects, and this one was no exception. This was where I truly learned the importance of consistent code structure, and the importance of abstraction. Without these things this project would have never been completed in time, and it would have *definitely* forgotten what most of the parts do by the end of it.\n\nI also learned how a number of new technical things in this project: I learned how to do user authentication, manage user accounts, use database APIs, how page routing works, and how to use GraphQL. All of these were things that were new to me before this project, but now having an understanding of how they work I have no idea how I managed to make anything web-based before. \n\nThe final, and perhaps most important thing I learned during this project, was how to plan big things out. Breaking out massive tasks (like making this site) into smaller tasks and setting deadlines for those is something I do pretty regularly now, and it's a skill I'm insanely thankful I have. It makes me much more productive, and also keeps me sane during big projects. I have the LTI to thank for that. ","datePublished":"2021-08-04"}},"pageContext":{"id":"DatoCmsProject-50817953-en","slug":"parallel","__params":{"slug":"parallel"}}},"staticQueryHashes":[]}